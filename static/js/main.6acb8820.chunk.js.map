{"version":3,"sources":["AddGame.js","SearchItem.js","GamesLibrary.js","SavedItem.js","SavedGamesLog.js","EditItem.js","EditingGamesLog.js","MyGamesLog.js","utils/GamesAPI.js","App.js","reportWebVitals.js","index.js"],"names":["AddGame","className","Component","SearchItem","this","props","game","myClone","onRemove","style","backgroundImage","imageURL","name","dev","status","onClick","id","GamesLibrary","state","search","updateQuery","setState","clearSearch","allgames","onNavigate","onSwitch","resultsArray","filter","g","toLowerCase","includes","results","clone","Object","assign","type","placeholder","value","onChange","event","target","length","map","to","SavedItem","games","sectionClass","title","listClass","gameStatus","href","platform","rating","score","time","SavedGamesLog","EditItem","EditingGamesLog","MyGamesLog","edit","editor","editValue","mygames","api","token","localStorage","Math","random","toString","substr","headers","remove","contact","fetch","method","then","res","json","data","create","body","JSON","stringify","App","display","createContact","GamesAPI","currentState","concat","removeContact","c","switchState","contacts","exact","path","render","onDeleteContact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6acb8820.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddGame extends Component{    \r\n    render(){\r\n        return(\r\n          <div className = 'AddGame'>\r\n              <h1 className='bruh'>Add Game</h1>\r\n          </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\nexport default AddGame","import React, { Component } from 'react'\r\n\r\nclass SearchItem extends Component{\r\n\r\n    render(){\r\n    const { game, myClone, onRemove } = this.props\r\n        return(\r\n        <div className='search-item'\r\n            key={game.id}\r\n            style={{backgroundImage: `url(${game.imageURL})`}}\r\n        >\r\n            <div className='search-item-game-info'>\r\n                  <h1>{`${game.name}`}</h1>\r\n                  <h3>{`2019`}</h3>\r\n                  <h3>{`${game.dev}`}</h3>\r\n            </div>\r\n            <div className='search-item-user-info'>\r\n\r\n                  <h2>{`Status: ${game.status}`}</h2>\r\n                  <div className='search-item-panel'>\r\n                    {game.status === 'none' &&  \r\n                      <button className='play button'\r\n                      onClick={()=> {myClone(game,'playing')}}\r\n                      >play\r\n                      </button>}\r\n                    {game.status === 'none' &&  \r\n                    <button className='pause button'\r\n                    onClick={()=> {myClone(game,'waitlist')}}\r\n                      >wait\r\n                    </button>\r\n                    }\r\n                    {game.status === 'none' &&  \r\n                    <button className='check button'\r\n                    onClick={()=> {myClone(game,'completed')}}\r\n                      >done\r\n                    </button>\r\n                    }\r\n                    {game.status === 'waitlist' &&  \r\n                    <button className='play button'\r\n                    onClick={()=> {myClone(game,'playing')}}\r\n                      >play\r\n                    </button>\r\n                    } \r\n                    {game.status === 'waitlist' &&  \r\n                        <button className='check button'\r\n                        onClick={()=> {myClone(game,'completed')}}\r\n                        >done\r\n                    </button>\r\n                    }      \r\n                    {game.status === 'playing' &&  \r\n                    <button className='pause button'\r\n                        onClick={()=> {myClone(game,'waitlist')}}\r\n                        >wait\r\n                    </button>             \r\n                    }\r\n                    {game.status === 'playing' &&  \r\n                    <button className='check button'\r\n                    onClick={()=> {myClone(game,'completed')}}\r\n                        >done\r\n                    </button>             \r\n                    }\r\n                    {game.status === 'completed' &&  \r\n                    <button className='pause button'\r\n                    onClick={()=> {myClone(game,'waitlist')}}\r\n                        >wait\r\n                    </button>             \r\n                    }\r\n                    {game.status === 'completed' &&  \r\n                    <button className='play button'\r\n                    onClick={()=> {myClone(game,'playing')}}\r\n                        >play\r\n                    </button>             \r\n                    }                \r\n                    <button \r\n                            onClick={() => onRemove(game)}\r\n                    >DELETE\r\n                    </button> \r\n\r\n                  </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchItem","import React, { Component } from 'react';\r\nimport SearchItem from \"./SearchItem\";\r\nimport { Link } from \"react-router-dom\";\r\nclass GamesLibrary extends Component {\r\n  state = {\r\n    search: ''\r\n  }  \r\n  updateQuery = (search) => {\r\n    this.setState(() => (\r\n        {\r\n          search: search\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.updateQuery('')\r\n  }\r\n\r\n  render(){\r\n    const { search } = this.state\r\n    const { allgames, onNavigate, onSwitch, onRemove } = this.props\r\n    const resultsArray = search === ''\r\n    ? ''\r\n    : allgames.filter((g) => (\r\n      g.name.toLowerCase().includes(search.toLowerCase())\r\n    ))\r\n    const results = resultsArray\r\n    const myClone = (game, status) => {\r\n      let target = {}\r\n      const clone = Object.assign(target, game)\r\n      clone.status = status\r\n      onSwitch(clone,game)\r\n    }  \r\n\r\n      return(\r\n      <div className='search'>\r\n        <div className='search-header'>\r\n          <input\r\n            className='search-games-input'\r\n            type='text'\r\n            placeholder='Search Games'\r\n            value={search}\r\n            onChange={(event)=> this.updateQuery(event.target.value)}\r\n          ></input>\r\n          <div className='results-title'>           \r\n            {search === ''\r\n            ? <h1>Search the Library</h1>\r\n            : <h2>{`${resultsArray.length} search ${resultsArray.length === 1\r\n              ? 'result'\r\n              : 'results'} for '${search}'`}</h2>}\r\n            {search!== '' &&(\r\n              <button className='clear button'\r\n              onClick={this.clearSearch}>\r\n                Clear Search\r\n              </button>\r\n            )}      \r\n            \r\n            </div>\r\n        </div>\r\n        <div className='search-results'>          \r\n          <ol className='search-list'>\r\n            {results !== '' && (\r\n              results.map((game)=>(\r\n                <li\r\n                  key={`${game.id}List`}>\r\n                  <SearchItem\r\n                    game= {game}\r\n                    myClone = {myClone}\r\n                    onRemove = {onRemove} \r\n                  />\r\n                </li>)))\r\n            }\r\n          </ol>\r\n        </div>\r\n        <div className='search-footer'>\r\n          <Link\r\n            to='/'\r\n          >\r\n            <button\r\n                className='back button'\r\n                onClick= {onNavigate}\r\n            >\r\n            </button>\r\n          </Link>\r\n          \r\n          <h2>Return</h2>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default GamesLibrary","import React, { Component } from 'react'\r\n\r\nclass SavedItem extends Component{\r\nrender(){\r\n    const { games, sectionClass, title, listClass, gameStatus } = this.props\r\n    return(\r\n        <div className={sectionClass}>\r\n            <h2 className='status-title'>{title}</h2>\r\n            <div className='games-list-section'>\r\n                <ol className='games-list'>\r\n                    {games.map((game)=>\r\n                        game.status === gameStatus &&\r\n                        (<li className={listClass}\r\n                                key={game.id}\r\n                                style={{backgroundImage: `url(${game.imageURL})`}}>\r\n                                <a className='game-item-info'\r\n                                href = {game.imageURL}\r\n                                >\r\n                                    <div className='game-item-info-top'>\r\n                                        <div className='game-item-name'>\r\n                                            <h2>\r\n                                                {`${game.name}`} \r\n                                            </h2>\r\n                                            <h4>\r\n                                                {`${game.dev}`}\r\n                                            </h4>   \r\n                                        </div>\r\n                                        <h3 className='game-item-system'>\r\n                                            {`${game.platform}`}\r\n                                        </h3>   \r\n                                    </div>\r\n                                    <div className='game-item-info-bottom'>\r\n                                        <h3>\r\n                                            {`Rating: ${game.rating}`}\r\n                                        </h3>  \r\n                                        <h3>\r\n                                            {`Completion: ${game.score}`}\r\n                                        </h3>    \r\n                                        <h2>\r\n                                            {`MyTime: ${game.time}`}\r\n                                        </h2>                            \r\n                                    </div> \r\n                                </a>    \r\n                        </li>)\r\n                        )}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default SavedItem","import React, { Component } from 'react';\r\nimport SavedItem from './SavedItem'\r\n\r\n\r\nclass SavedGamesLog extends Component{\r\n render(){\r\n     const { games } = this.props\r\n     return(\r\n    <div className='log-list'>\r\n        <SavedItem \r\n            games={games}\r\n            title='Currently Active'\r\n            listClass='current-item game'\r\n            gameStatus='playing'\r\n            />\r\n        <SavedItem \r\n            games={games}\r\n            title='Waitlisted'\r\n            listClass='current-item game'\r\n            gameStatus='waitlist'\r\n            />\r\n        <SavedItem \r\n            games={games}\r\n            sectionClass='completed-section'\r\n            title='Completed Games'\r\n            listClass='current-item game'\r\n            gameStatus='completed'\r\n            />\r\n    </div>\r\n     );\r\n }    \r\n}\r\n\r\nexport default SavedGamesLog","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nclass EditItem extends Component{\r\n    render(){\r\n    const {title,games,status,clone} = this.props\r\n        return(\r\n        <div>\r\n            <h2 className='status-title'>{title}</h2>\r\n            <div className='games-list-section'>\r\n            <ol className='games-list'>\r\n            {games.map((game)=> (\r\n                game.status === status && (\r\n                <li className='current-item game edit'\r\n                    key={game.id}\r\n                    style={{backgroundImage: `url(${game.imageURL})`}}\r\n                >\r\n                    <div className='game-top-section'>\r\n                      <button\r\n                        className='remove button'\r\n                        onClick={()=> {clone(game,'none')}}\r\n                        >\r\n                      </button>\r\n                    </div>\r\n                    <div className='game-section-bottom'>\r\n                        <div>\r\n                        {status !== 'playing' && <button\r\n                            className='play button' \r\n                            onClick={()=> {clone(game,'playing')}}\r\n                            >wait\r\n                        </button>}\r\n                        {status !== 'waitlist' &&\r\n                        <button\r\n                          className='pause button' \r\n                          onClick={()=> {clone(game,'waitlist')}}\r\n                          >wait\r\n                        </button>}\r\n                        {status !== 'completed' &&\r\n                        <button\r\n                          className='check button' \r\n                          onClick={()=> {clone(game,'completed')}}\r\n                          >finshed!\r\n                        </button>}\r\n\r\n                      </div>                      \r\n                    </div>\r\n                </li>)\r\n            ))}\r\n                <Link to='/search'> \r\n                    <li className='current-item game blank'>\r\n                        <p>+</p>\r\n                    </li>\r\n                </Link>  \r\n            </ol>\r\n            </div>\r\n        </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default EditItem","import React, { Component } from 'react';\r\nimport EditItem from './EditItem'\r\n class EditingGamesLog extends Component{\r\n    render(){\r\n        const { games, clone } = this.props\r\n        return(\r\n            <div className='log-list'>\r\n                <EditItem\r\n                    title='Edit Active'\r\n                    status='playing'\r\n                    games= {games}\r\n                    clone={clone}\r\n                />\r\n                <EditItem\r\n                    title='Edit WaitList'\r\n                    status='waitlist'\r\n                    games= {games}\r\n                    clone={clone}\r\n                />\r\n                <EditItem\r\n                    title='Edit Completed'\r\n                    status='completed'\r\n                    games= {games}\r\n                    clone={clone}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n }\r\n\r\n export default EditingGamesLog\r\n\r\n\r\n /*\r\n                    <div className='game-section-bottom'>\r\n                      <div>\r\n                        <button\r\n                          className='pause button' \r\n                          onClick={()=> {myClone(game,'waitlist')}}\r\n                          >wait\r\n                        </button>\r\n                        <button\r\n                          className='check button' \r\n                          onClick={()=> {myClone(game,'completed')}}\r\n                          >finshed!\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    </li>)\r\n                  ))}\r\n                  <div onClick={onNavigate}> \r\n                    <li className='current-item game blank'>\r\n                      <p>+</p>\r\n                    </li>\r\n                  </div>\r\n                  \r\n                </ol>\r\n                </div>\r\n                \r\n              </div>          \r\n            <div>\r\n              <h2 className='status-title'>Waitlisted</h2>\r\n              <div className='games-list-section'> \r\n              <ol className='games-list'>\r\n              \r\n                {mygames.map((game)=>(\r\n                  game.status === 'waitlist' &&\r\n                  (<li className='waitlisted-item game edit'\r\n                    key={game.id}\r\n                    style={{backgroundImage: `url(${game.imageURL})`}\r\n                  }>                    \r\n                    <div className='game-top-section'>\r\n                      <button\r\n                        className='remove button'\r\n                        onClick={()=> {myClone(game,'none')}}\r\n                        >\r\n                      </button>\r\n                    </div>\r\n                    <div className='game-section-bottom'>\r\n\r\n                      <button\r\n                        className='play button'\r\n                        onClick={()=> {myClone(game,'playing')}}\r\n                        >\r\n                      </button>\r\n                      <button\r\n                        className='check button' \r\n                        onClick={()=> {myClone(game,'completed')}}\r\n                        >finshed!\r\n                      </button>\r\n                    </div>\r\n                  </li>)\r\n                ))}\r\n                  <Link\r\n                    to='/search'\r\n                    \r\n                  > \r\n                    <li className='current-item game blank'>\r\n                    +\r\n                    </li>\r\n                  </Link> \r\n              </ol>\r\n              </div>\r\n            </div>\r\n            <div className='completed-section'>\r\n              <h2 className='status-title'>Completed</h2>\r\n              <ul className='games-list'>\r\n                {mygames.map((game)=>(\r\n                  game.status === 'completed' &&\r\n                  (<li className='completed-item game edit'\r\n                    key={game.id}\r\n                    style={{backgroundImage: `url(${game.imageURL})`}\r\n                  }>\r\n                    <div className='game-top-section'>\r\n                      <button\r\n                        className='remove button'\r\n                        onClick={()=> {myClone(game,'none')}}\r\n                        >\r\n                      </button>\r\n                    </div>\r\n                    <div className='game-section-bottom'>\r\n                      <div>\r\n                      <button\r\n                          className='play button' \r\n                          onClick={()=> {myClone(game,'playing')}}\r\n                          >play\r\n                        </button>\r\n                        <button\r\n                          className='pause button' \r\n                          onClick={()=> {myClone(game,'waitlist')}}\r\n                          >wait\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </li>)\r\n                ))}\r\n                <div onClick={onNavigate}> \r\n                  <li className='current-item game blank'>\r\n                    <p>+</p>\r\n                  </li>\r\n                  </div>\r\n              </ul>\r\n            </div>\r\n */","import React, { Component } from 'react';\r\nimport SavedGamesLog from './SavedGamesLog';\r\nimport EditingGamesLog from './EditingGamesLog'\r\nimport { Link } from 'react-router-dom'\r\nclass MyGamesLog extends Component {\r\n  state = {\r\n    edit: 'save'\r\n  }\r\n\r\n  editor = (editValue) => {\r\n    this.setState({edit: editValue})\r\n  }\r\n\r\n\r\n    render(){\r\n      const { mygames, onSwitch } = this.props\r\n      const myClone = (game, status) => {\r\n        let target = {}\r\n        const clone = Object.assign(target, game)\r\n        //clone.id = `${game.id}2`\r\n        clone.status = status\r\n        onSwitch(clone,game)\r\n      }  \r\n      return(\r\n        <div className='games-log'>\r\n          <div className='app-header'>\r\n            <div className='app-title'>\r\n              <h1>Games Log</h1>\r\n              <p>1.00</p>\r\n            </div>\r\n            <div className='app-dashbaord'>\r\n            {this.state.edit === 'edit' &&(\r\n              <button\r\n              className='save button'\r\n              onClick = {() => this.editor('save')}>\r\n                  Save</button>)}\r\n              {this.state.edit === 'save' &&(\r\n              <button\r\n              className='pen button'\r\n              onClick = {() => this.editor('edit')}>\r\n                  Edit</button>)}\r\n              <Link\r\n                to='/search'>\r\n                  <button className='magnifying-glass button'>\r\n                    Search Games\r\n                  </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          {this.state.edit === 'save' &&(\r\n            <SavedGamesLog \r\n              games = {mygames}\r\n              clone = {myClone}\r\n            />\r\n          )}\r\n          {this.state.edit === 'edit' &&(\r\n            <EditingGamesLog \r\n              games = {mygames}\r\n              clone = {myClone}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default MyGamesLog","//CODE IS TAKEN DIRECTLY FROM UDACITY FOR LEARNING PURPOSES\r\n//Variable names are changed\r\n\r\nconst api = 'https://gamesrepositoryserverapp.herokuapp.com'\r\n\r\nlet token = localStorage.token\r\n\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n//comment\r\n//path that allows the app.js to contact the server\r\nexport const getAll = () =>\r\n  fetch(`${api}/contacts`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.contacts)\r\n\r\n    export const remove = (contact) =>\r\n    fetch(`${api}/contacts/${contact.id}`, { method: 'DELETE', headers })\r\n      .then(res => res.json())\r\n      .then(data => data.contact)\r\n\r\n\r\n\r\nexport const create = (body) =>\r\n  fetch(`${api}/contacts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(body)\r\n  }).then(res => res.json())","import React, { Component } from 'react';\nimport AddGame from './AddGame';\nimport GamesLibrary from './GamesLibrary'\nimport MyGamesLog from './MyGamesLog';\nimport * as GamesAPI from './utils/GamesAPI'\nimport { Route } from 'react-router-dom';\n  class App extends Component{\n  state = {\n    display: 'log',\n    games: []\n  }\n  componentDidMount(){\n    GamesAPI.getAll()\n        .then((games)=>{\n          this.setState(() => ({\n            games\n          }))\n        })\n  }\n  createContact = (game) => {\n    GamesAPI.create(game)\n      .then((game)=>{\n        this.setState((currentState) => ({\n          games: currentState.games.concat([game])\n        }))\n      })\n  }\n\n  removeContact = (game) => {\n    this.setState((currentState)=>({\n      games: currentState.games.filter((c) => {\n        return c.id !== game.id\n      })\n    }))\n    GamesAPI.remove(game)\n  }\n\n  switchState = (clone,game) => {\n    this.createContact(clone)\n    this.removeContact(game)\n  }\n\n   render (){\n    return(\n      <div>\n        <Route exact path='/' render={() => (\n          <MyGamesLog\n            mygames = {this.state.games}\n            onDeleteContact={this.removeContact}\n            onSwitch = {this.switchState}\n          />\n        )} />\n        <Route path='/search' render={()=> (\n          <GamesLibrary\n            allgames = {this.state.games}\n            display={this.state.display}\n            onSwitch = {this.switchState}\n            onRemove = {this.removeContact}\n          />\n        )}/>\n\n        \n\n        {this.state.display === 'add' &&(\n                   <AddGame\n          display={this.state.display}\n        />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}